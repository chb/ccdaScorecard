/*
 * Classic example grammar, which recognizes simple arithmetic expressions like
 * "2*(3+4)". The parser generated from this grammar then computes their value.
 */
{
  var metric = {
  'Y': 24,
  'Z': 21,
  'E': 18,
  'P': 15,
  'T': 12,
  'G': 9,
  'M': 6,
  'k': 3,
  'h': 2,
  'da': 1,
  'd': -1,
  'c': -2,
  'm': -3,
  'u': -6,
  'n': -9,
  'p': -12,
  'f': -15,
  'a': -18,
  'z': -21,
  'y': -24
};
}

start
  = term:term {
  var constant = 1;
  var likes = { };
  term.forEach(function(t){
    if (t.unit === 1) {
      return constant *= Math.pow(t.constant, t.exponent);
    }

    if (!likes[t.unit]){
      likes[t.unit] = {
         unit: t.unit,constant:1,exponent:0
      }
    }

    likes[t.unit].constant *= t.constant;
    likes[t.unit].exponent += t.exponent;
  });

Object.keys(likes).forEach(function(k){
  constant *= likes[k].constant;
  delete likes[k].constant;
});

likes = Object.keys(likes)
        .filter(function(l){return likes[l].exponent !== 0;})
        .map(function(l){return likes[l];});
return {
  constant: constant,
  units: likes.length>0?likes:null
}
}

sign = sign:[+-] 
digit = [0-9]
digits = d:digit dd:digits {return parseInt(d+dd);}/ d:digit {return parseInt(d);}
factor = digits
exponent = s:sign d:digits {return s=='+'?d:-d;}/ d:digits {return d}
simpleUnit =  p:PREFIX m:METRICATOM {
  console.log("simple",p,m);
  m.constant *= Math.pow(10,metric[p]);
  return  m;
} / ATOM/ METRICATOM / d:digits {return {type:"v",constant:d,exponent:1,unit:1}}
annotatable = u:simpleUnit e:exponent {u.exponent = e; return [u];} / u:simpleUnit{return [u];}
component = 
 a:annotatable annotation  {return a;}/ 
 annotatable  / 
 a:annotation {return [a];} / 
 factor / 
 "(" t:term ")" { return t; }

term = 
  "/" t:term {t.forEach(function(c){c.exponent *= -1;}); return t;}/ 
  c1:component c2:([\./] component)* {
    var ret = c1;
    c2.forEach(function(c){
      var exp = c[0] === '.' ? 1 : -1;
      ret.push.apply(ret,c[1].map(function(c){c.exponent *= exp; return c;}));
    });
    console.log(".Args", arguments,c1,c2);
    return ret;  
  }
  /c1:component c2:("." component)* {
    var ret = c1;
    c2.forEach(function(c){
      ret.push.apply(ret,c[1]);
    });
    console.log(".Args", arguments,c1,c2);
    return ret;    
  }/
annotation = "{" m:[^}]+ "}" 
{return {type:"v",unit:1,exponent:1,constant:1}}

ATOM = "10*"/"10^"/"[pi]"/"%"/"[ppth]"/"[pppm]"
/"bit_s"
/"Ao"
/"b"
/"att"
/"[psi]"
/"circ"
/"sph"
/"[car_m]"
/"[car_Au]"
/"[smoot]"


/"[pH]"
/"[S]"
/"[HPF]"
/"[LPF]"
/"[arb'U]"
/"[USP'U]"
/"[GPL'U]"
/"[MPL'U]"
/"[APL'U]"
/"[beth'U]"
/"[todd'U]"
/"[dye'U]"
/"[smgy'U]"
/"[bdsk'U]"
/"[ka'U]"
/"[knk'U]"
/"[mclg'U]"
/"[tb'U]"
/"[CCID_50]"
/"[TCID_50]"
/"[PFU]"
/"[FFU]"
/"[CFU]"
/"[BAU]"
/"[AU]"
/"[Amb'a'1'U]"
/"[PNU]"
/"[Lf]"
/"[D'ag'U]"

/"[in_i'H2O]"
/"[in_i'Hg]"
/"[PRU]"
/"[wood'U]"
/"[diop]"
/"[p'diop]"
/"%[slope]"
/"[mesh_i]"
/"[Ch]"
/"[drp]"
/"[hnsf'U]"
/"[MET]"
/"[hp'_X]"
/"[hp'_C]"
/"[hp'_M]"
/"[hp'_Q]"
/"[hp_X]"
/"[hp_C]"
/"[hp_M]"
/"[hp_Q]"
/"[kp_X]"
/"[kp_C]"
/"[kp_M]"
/"[kp_Q]"


/"[degF]"
/"[Cal]"
/"[Btu_39]"
/"[Btu_59]"
/"[Btu_60]"
/"[Btu_m]"
/"[Btu_IT]"
/"[Btu_th]"
/"[Btu]"
/"[HP]"


/"[sc_ap]"
/"[dr_ap]"
/"[oz_ap]"
/"[lb_ap]"

/"[sc_ap]"
/"[dr_ap]"
/"[oz_ap]"
/"[lb_ap]"

/"[pwt_tr]"
/"[oz_tr]"
/"[lb_tr]"

/"[gr]"
/"[lb_av]"
/"[oz_av]"
/"[dr_av]"
/"[scwt_av]"
/"[lcwt_av]"
/"[ston_av]"
/"[lton_av]"
/"[stone_av]"

/"[gal_br]"
/"[pk_br]"
/"[bu_br]"
/"[qt_br]"
/"[pt_br]"
/"[gil_br]"
/"[foz_br]"
/"[fdr_br]"
/"[min_br]"

/"[gal_us]"
/"[bbl_us]"
/"[qt_us]"
/"[pt_us]"
/"[gil_us]"
/"[foz_us]"
/"[fdr_us]"
/"[min_us]"
/"[crd_us]"
/"[bu_us]"
/"[gal_wi]"
/"[pk_us]"
/"[dqt_us]"
/"[dpt_us]"
/"[tbs_us]"
/"[tsp_us]"
/"[cup_us]"

/"[in_br]"
/"[ft_br]"
/"[rd_br]"
/"[ch_br]"
/"[lk_br]"
/"[fth_br]"
/"[pc_br]"
/"[yd_br]"
/"[mi_br]"
/"[nmi_br]"
/"[kn_br]"
/"[acr_br]"

/"[ft_us]"
/"[yd_us]"
/"[in_us]"
/"[rd_us]"
/"[ch_us]"
/"[lk_us]"
/"[rch_us]"
/"[rlk_us]"
/"[fth_us]"
/"[fur_us]"
/"[mi_us]"
/"[acr_us]"
/"[srd_us]"
/"[smi_us]"
/"[sct]"
/"[twp]"
/"[mil_us]"

/"[in_i]"
/"[ft_i]"
/"[yd_i]"
/"[mi_i]"
/"[fth_i]"
/"[nmi_i]"
/"[kn_i]"
/"[sin_i]"
/"[sft_i]"
/"[syd_i]"
/"[cin_i]"
/"[cft_i]"
/"[cyd_i]"
/"[bf_i]"
/"[cr_i]"
/"[mil_i]"
/"[cml_i]"
/"[hd_i]"
/"[ppb]"
/"[pptr]"
/"gon"
/"deg"
/"'"
/"''"
/"min"
/"h"
/"d"
/"a_t"
/"a_j"
/"a_g"
/"a"
/"wk"
/"mo_s"
/"mo_j"
/"mo_g"
/"mo"
/"AU"
/"atm"
/"[lbf_av]"




METRICATOM = 
"bit"
/"By"
/"Bd"
/"st"
/"mho"

/"Np"
/"B"
/"B[SPL]"
/"B[V]"
/"B[mV]"
/"B[uV]"
/"B[10.nV]"
/"B[W]"
/"B[kW]"

/"eq"
/"osm"
/"g%"
/"kat"
/"U"
/"[iU]"
/"[IU]"

/"m[H2O]"
/"m[Hg]"
/"cal_[15]"
/"cal_[20]"
/"cal_m"
/"cal_IT"
/"cal_th"
/"cal"

/"Ky"
/"Gal"
/"dyn"
/"erg"
/"P"
/"Bi"
/"St"
/"Mx"
/"G"
/"Oe"
/"Gb"
/"sb"
/"Lmb"
/"ph"
/"Ci"
/"R"
/"RAD"
/"REM"
/"mol"
/"sr"
/"Hz"
/"N"
/"Pa"
/"J"
/"W"
/"A"
/"V"
/"F"
/"Ohm"
/"S"
/"Wb"
/"Cel"
/"T"
/"H"
/"lm"
/"lx"
/"Bq"
/"Gy"
/"Sv"
/"l"
/"L"
/"ar"
/"t"
/"bar"
/"u"
/"eV"
/"pc"
/"[c]"
/"[h]"
/"[k]"
/"[eps_0]"
/"[mu_0]"
/"[e]"
/"[m_e]"
/"[m_p]"
/"[G]"
/"[g]"
/"[ly]"
/"gf"
/"g"{
  return {
    type:"v",exponent:1,constant:1,unit:"g"
  }
}
/"m"
/"s"/"rad"/"K"/"C"/"cd"

PREFIX = 
 "Y"/"Z"/"E"/"P"/"T"/"G"/"M"/"k"/"h"/"da"/"d"/"c"/"m"/"u"/"n"/"p"/"f"/"a"/"z"/"y"/"Ki"/"Mi"/"Gi"/"Ti"

